{
  "name": "region-highlighter",
  "displayName": "Region Highlighter",
  "description": "decorates code inbetween regions, supoprt for custom color configurations and styles.",
  "publisher": "Wiensss",
  "icon": "assets/logo.png",
  "license": "MIT",
  "version": "1.0.1",
  "repository": "https://github.com/Wiensss/vscode-region-highlighter",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "regionHighlighter.mark",
        "title": "Region Highlighter: Mark Region"
      },
      {
        "command": "regionHighlighter.unmark",
        "title": "Region Highlighter: Unmark Region"
      }
    ],
    "configuration": {
      "title": "Region Highlighter",
      "properties": {
        "regionHighlighter.showInRuler": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Shows regions as decorations in ruler."
        },
        "regionHighlighter.rulerStyle": {
          "type": "string",
          "default": "full",
          "enum": [
            "left",
            "center",
            "right",
            "full"
          ],
          "markdownDescription": "Decorative region ruler style. Only applies when `#regionHighlighter.showInRuler#` is set to `true`."
        },
        "regionHighlighter.borderWidth": {
          "type": "string",
          "default": "1px",
          "markdownDescription": "Decorative region border width. Only applies when `#regionHighlighter.decorationStyle#` is set to `border`."
        },
        "regionHighlighter.borderStyle": {
          "type": "string",
          "default": "solid",
          "enum": [
            "solid",
            "dashed",
            "dotted",
            "double",
            "groove"
          ],
          "markdownDescription": "Decorative region border style. Only applies when `#regionHighlighter.decorationStyle#` is set to `border`."
        },
        "regionHighlighter.defaultColor": {
          "type": "string",
          "default": "#C9C4E930",
          "markdownDescription": "Default region in CSS style, eg: `pink` / `rgb(255,192,203)` / `hsl(350deg,100%,88%)` / `#FFC2CC`"
        },
        "regionHighlighter.decorationStyle": {
          "type": "string",
          "default": "background",
          "enum": [
            "border",
            "background"
          ],
          "description": "Default decoration region style."
        },
        "regionHighlighter.defaultTheme": {
          "type": "string",
          "default": "Rainbow",
          "enum": [
            "Rainbow",
            "Day3024",
            "Morandi",
            "Custom Theme",
            "Default Color"
          ],
          "description": "Default region backgroundColor theme",
          "enumDescriptions": [
            "Built-in theme Rainbow",
            "Built-in theme Day3024",
            "Built-in theme Morandi",
            "Using custom theme",
            "Using default color to decorated the same color"
          ]
        },
        "regionHighlighter.customTheme": {
          "type": "array",
          "markdownDescription": "Only applies when `#regionHighlighter.defaultTheme` is set to `Custom Theme`. It support two configuration format: `Array<color>` and `Array<{label: string, color: string }>`, the label property will be available for customizing the introverted region color in future."
        },
        "regionHighlighter.ignoreFlag": {
          "type": "string",
          "default": "!",
          "description": "Does not decorate current region when the first character outside the region marker matches the flag."
        },
        "regionHighlighter.allowLanguageIDs": {
          "type": "string",
          "default": "*",
          "markdownDescription": "IDs which this extension will work on. Identifiers have to be separated by a comma. `*` means that all the languages. eg: `javascript,typescript`"
        },
        "regionHighlighter.extraColorStrategy": {
          "type": "string",
          "default": "Custom Theme First Color",
          "enum": [
            "Default Color",
            "Custom Theme First Color",
            "Custom Theme Last Color"
          ],
          "enumDescriptions": [
            "Using default color to decorated overflow regions",
            "Using custom theme first color to decorated overflow regions",
            "Using custom theme last color to decorated overflow regions"
          ],
          "description": "The decoration strategy chosen when the length of region blocks in the editor exceeds the preset color length."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "prettier": "2.5.1",
    "typescript": "^4.4.4"
  }
}
